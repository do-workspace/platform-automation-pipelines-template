## http://docs.pivotal.io/platform-automation/v2.1/
## https://github.com/myminseok/platform-automation-pipelines
## fly -t demo sp -p test -c test.yml test-params.yml
resources:
- name: platform-automation-tasks
  type: s3
  source:
    endpoint: ((s3.endpoint))
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3.secret_access_key))
    region_name: ((s3.region_name))
    bucket: ((s3.buckets.platform_automation))
    regexp: platform-automation-tasks-(.*).zip
    skip_ssl_verification: true

- name: platform-automation-tasks-git
  type: git
  source:
    private_key: ((git.private_key))
    uri: ((git.platform_automation_tasks.uri))
    branch: master


- name: platform-automation-image
  type: s3
  source:
    endpoint: ((s3.endpoint))
    access_key_id: ((s3.access_key_id))
    secret_access_key: ((s3.secret_access_key))
    region_name: ((s3.region_name))
    bucket: ((s3.buckets.platform_automation))
    regexp: platform-automation-image-(.*).tgz
    skip_ssl_verification: true

- name: configuration
  type: git
  source:
    private_key: ((git.private_key))
    uri: ((git.configuration.uri))
    branch: master

- name: opsman-product
  type: s3
  source:
    endpoint: ((s3.endpoint))
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.pivnet_products))
    region_name: ((s3.region_name))
    secret_access_key: ((s3.secret_access_key))
    regexp: pcf-vsphere-(.*).ova
    skip_ssl_verification: true


- name: pas-product
  type: s3
  source:
    endpoint: ((s3.endpoint))
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.pivnet_products))
    region_name: ((s3.region_name))
    secret_access_key: ((s3.secret_access_key))
    regexp: cf-(.*).pivotal
    skip_ssl_verification: true

- name: pas-stemcell
  type: s3
  source:
    endpoint: ((s3.endpoint))
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.pivnet_products))
    region_name: ((s3.region_name))
    secret_access_key: ((s3.secret_access_key))
    regexp: pas-stemcell/bosh-stemcell-(.*)-vsphere.*\.tgz
    skip_ssl_verification: true


- name: healthwatch-product
  type: s3
  source:
    endpoint: ((s3.endpoint))
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.pivnet_products))
    region_name: ((s3.region_name))
    secret_access_key: ((s3.secret_access_key))
    regexp: p-healthwatch-(.*).pivotal
    skip_ssl_verification: true
    
- name: healthwatch-stemcell
  type: s3
  source:
    endpoint: ((s3.endpoint))
    access_key_id: ((s3.access_key_id))
    bucket: ((s3.buckets.pivnet_products))
    region_name: ((s3.region_name))
    secret_access_key: ((s3.secret_access_key))
    regexp: healthwatch-stemcell/bosh-stemcell-(.*)-vsphere.*\.tgz
    skip_ssl_verification: true



# reusable stuff
credhub-interpolate: &credhub-interpolate
  image: platform-automation-image
  file: platform-automation-tasks-git/tasks/credhub-interpolate.yml
  input_mapping:
    files: configuration
  output_mapping:
    interpolated-files: configuration
  params:
    CREDHUB_SERVER: ((credhub.server))
    CREDHUB_CA_CERT: ((credhub.ca_cert))
    CREDHUB_CLIENT: ((credhub.client))
    CREDHUB_SECRET: ((credhub.secret))
    PREFIX: "/concourse/main"
    INTERPOLATION_PATH: ((credhub.interpolate_folders))

jobs:
- name: test-resources
  plan:
  - aggregate:
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: configuration

    - get: platform-automation-tasks-git
  - task: credhub-interpolate #temporary
    <<: *credhub-interpolate

  - task: test-resources
    image: platform-automation-image
    file: platform-automation-tasks/tasks/test.yml


- name: fetch-opsman
  plan:
  - aggregate:
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: configuration
    
    - get: platform-automation-tasks-git
  - task: credhub-interpolate #temporary
    <<: *credhub-interpolate

  - task: download-opsman-image
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    input_mapping: {config: configuration }
    params:
      CONFIG_FILE: ((foundation))/download-product-configs/opsman.yml
  - aggregate:
    - put: opsman-product
      params:
        file: downloaded-product/*


- name: fetch-pas
  plan:
  - aggregate:
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: configuration

    - get: platform-automation-tasks-git
  - task: credhub-interpolate #temporary
    <<: *credhub-interpolate

  - task: download-pas-product-and-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: ((foundation))/download-product-configs/pas.yml
    input_mapping: {config: configuration }
    output_mapping: {downloaded-stemcell: pas-stemcell}
  - aggregate:
    - put: pas-product
      params:
        file: downloaded-product/*.pivotal
    - put: pas-stemcell
      params:
        file: pas-stemcell/*.tgz

- name: fetch-healthwatch
  plan:
  - aggregate:
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: configuration
    - get: platform-automation-tasks-git
  - task: credhub-interpolate #temporary
    <<: *credhub-interpolate
  - task: download-healthwatch-product-and-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: dev/download-product-configs/healthwatch.yml
    input_mapping: {config: configuration }
    output_mapping: {downloaded-stemcell: healthwatch-stemcell}
  - aggregate:
    - put: healthwatch-product
      params:
        file: downloaded-product/*.pivotal
    - put: healthwatch-stemcell
      params:
        file: healthwatch-stemcell/*.tgz

